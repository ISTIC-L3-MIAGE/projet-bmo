ClassDiagram [frame=true framecolor=steelblue label="Diagramme de classes"] {

 // Gestion des sports
 abstract class Sport {
  private id : int
  private name : String
  private coteEquipe1 : Double
  private coteEquipe2 : Double
  private termine : boolean
 }

 class FootBall {}
 FootBall -g-> Sport

 class Tennis {}
 Tennis -g-> Sport

 class Basket {}
 Basket -g-> Sport

 class CourseDeChevaux {}
 CourseDeChevaux -g-> Sport

 class Regle {
  private id : int
  private nom : String
  private description : String
 }
 Regle "0..*" -c-> "1..1" Sport

 // Gestion des paris
 abstract class Pari {
  private id : int
  private gagne : boolean
  private montantMise : int
 }
 Pari "0..*" --> "1..1" Sport : "Concerner";

 class PariSimple {
  private vainqueur : String
  private ecartScore : int
 }
 PariSimple -g-> Pari

 class PariAvance {
  private scoreMin : int
  private scoreMax : int
  private ecartScore : int
  private scoreExactGauche : int
  private scoreExactDroit : int
 }
 PariAvance -g-> Pari

 class Parieur {
  private id : int
  private nom : String
  private prenom : String
  private email : String
  private motDePasse : String
  private solde : int

  public placerPari(evenement: Sport, type: Pari, pronostic : String, montant: int): void
  public crediter(montant : int) : void
  private debiter(montant : int) : boolean
 }
 Parieur "1..1" --> "0..*" Pari : "Placer";

}